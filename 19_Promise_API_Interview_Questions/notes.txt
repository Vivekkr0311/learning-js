There are four major Promise APIs.
1. Promise.all()
2. Promise.allSettled()
3. Promise.race()
4. Promise.any()

1. Promise.all(): Suppose you have to make parallel API calls.
                In such cases this is used. When we need to handle
                multiple Promises together (multiple API calls).

                It is also known as "Fail Fast".

                Promise.all(), it takes array of promies as a input.
                eg: Promise.all([p1, p2, p3])
                This will make three parallel API calls.

                Let's say p1 takes 3 secs to resolve,
                p2 takes 1 sec and p3 takes 2 secs.

                Once these all are resolved, Promise.all() will give us back
                array having result of all these API calls. It will wait for all of these to complete.
                In this case, it will give result after 3 secs as maximum time taken for one the API is
                3 sec.

                And as soon as any of these promises gets rejected, Promise.all() will throw an error.
                In this case, it will not wait for 3 secs, let's say p2 gets failed after 1 secs, then
                immediately after 1 sec it will return failure message. Promise.all() will not wait for all the
                promises, even if other promises might get accepted. Promise.all() will not cancel other promises
                it will just throw an error when any one of them get rejected.

                Promise.all() work like, All or none..

                Promises cannot be cancel in between, once the promise made a request, it cannot be canceled.

2. Promise.allSettled(): This is used when we want results even if one promise gets fail, other might get success results.
                         For such situation we use Promise.allSettled().

                         Promise.allSettled() it will wait for all promises to get setteled(success or failure), even if
                         one of the promises gets failed.

                         eg Promise.allSettled([p1, p2, p3]);
                                p1 takes 3 secs
                                p2 takes 1 sec
                                p3 takes 2 secs

                         Output: [val1, err, val2], after 3 secs.

3. Promise.race(): It will give the value of first setteled promise.
                   eg: 
                   a. Promise.race([p1, p2, p3]);
                        p1 takes 3 secs
                        p2 takes 1 sec
                        p3 takes 2 secs

                    result: (value2), it is not an array, it is a value.

                   b. Similarly,
                        p1 takes 3 secs
                        p2 takes 5 sec
                        p3 takes 2 secs

                    result: (value3), it is not an array, it is a value.

                   c. Similarly, if error occurs first, we will get error from the first failed Promise.
                        p1 takes 3 secs
                        p2 takes 1 sec, but it fails in 1 secs
                        p3 takes 2 secs

                    result: (Error from p2), it is not an array, it is a value.

                So, it will give the result of first setteled promise, does not matter if it is failed or success.
                It will not wait for other promises to finish.

4. Promise.any(): It will wait for first promise to get succcess. It is success seeking API.
                  It is seeking a first success.
                eg:
                Promise.any([p1, p2, p3]);

                a. p1 takes 3 sec to success
                   p2 takes 1 sec to succcess
                   p3 takes 2 secs to succcess

                   Then output will be (value1)

                b. p1 takes 3 sec to success
                   p2 takes 1 sec to fail
                   p3 takes 2 secs to succcess

                   Then output will be (value3)
                
                c. p1 takes 3 sec to success
                   p2 takes 1 sec to fail
                   p3 takes 2 secs to fail

                   Then output will be (value1)
                
                d. p1 takes 3 sec to fail
                   p2 takes 1 sec to fail
                   p3 takes 2 secs to fail

                   Then output will be an aggregated error.
                   Array of all the error of all respective promises.

Settled: This means you got the result.
         Once the promise is settled, it can have two result.
         Settled can be success or failure.

         a. Resolve: Success/ Fullfilled.
         b. Reject: Failed/ Rejected.