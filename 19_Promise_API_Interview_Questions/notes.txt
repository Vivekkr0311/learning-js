There are four major Promise APIs.
1. Promise.all()
2. Promise.allSettled()
3. Promise.race()
4. Promise.any()

1. Promise.all(): Suppose you have to make parallel API calls.
                In such cases this is used. When we need to handle
                multiple Promises together (multiple API calls).

                Promise.all(), it takes array of promies as a input.
                eg: Promise.all([p1, p2, p3])
                This will make three parallel API calls.

                Let's say p1 takes 3 secs to resolve,
                p2 takes 1 sec and p3 takes 2 secs.

                Once these all are resolved, Promise.all() will give us back
                array having result of all these API calls. It will wait for all of these to complete.
                In this case, it will give result after 3 secs as maximum time taken for one the API is
                3 sec.

                And as soon as any of these promises gets rejected, Promise.all() will throw an error.
                In this case, it will not wait for 3 secs, let's say p2 gets failed after 1 secs, then
                immediately after 1 sec it will return failure message. Promise.all() will not wait for all the
                promises, even if other promises might get accepted. Promise.all() will not cancel other promises
                it will just throw an error when any one of them get rejected.

                Promise.all() work like, All or none..

                Promises cannot be cancel in between, once the promise made a request, it cannot be canceled.

2. Promise.allSettled(): This is used when we want results even if one promise gets fail, other might get success results.
                         For such situation we use Promise.allSettled().

                         Promise.allSettled() it will wait for all promises to get setteled(success or failure), even if
                         one of the promises gets failed.

                         eg Promise.allSettled([p1, p2, p3]);
                                p1 takes 3 secs
                                p2 takes 1 sec
                                p3 takes 2 secs

                         Output: [val1, err, val2], after 3 secs.