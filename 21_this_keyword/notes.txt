this keyword behaves differently in these environment.

1. Global Space
2. Inside a function
3. In strict mode - (this substitution)
4. this value depends on how this is called (window)
5. Inside a object's method
6. Call apply bind methods (sharing methods)
7. Inside arrow function
8. Inside DOM
9. Inside class and constructor

1. Global Space: "this" keyword in global spcae represents the "Global Object", and that
                 object can be different for other devices, it depends where you are running
                 javascript code.

2. Inside a function:

3. In strict mode: "this" keyword works differently in strict mode and in non-strict mode.

                    If the value of "this" is undefined or null, this keyword will be replaced with
                    global object only in non-strict mode.

4. Depends on how function is called: Value of "this" keyword also depends on how the function is called.
5. See example 05 and 06.
6. call, apply and bind methods: These thre are very important methods. These are used when we are sharing
                                 methods. If there one method in a obj1, and you want to share this method
                                 with obj2, then there is way of doing this using call, apply, and bind methods.
                                 